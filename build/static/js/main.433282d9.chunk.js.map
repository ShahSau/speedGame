{"version":3,"sources":["Circle.js","circles.js","GameOver.js","assets/sounds/end.mp3","assets/sounds/game.mp3","App.js","index.js"],"names":["Circle","props","className","active","onClick","style","backgroundColor","color","pointerEvents","disabled","id","circles","GameOver","point","closeHandler","gameendSound","Audio","endSound","gamestartSound","startSound","getRndInteger","min","max","Math","floor","random","App","state","score","current","gameover","pace","rounds","gamestart","timer","undefined","clickHandler","setState","console","log","stopHandler","nextCircle","nextActive","setTimeout","startHandler","play","pause","clearTimeout","this","map","circle","Component","ReactDOM","render","document","getElementById"],"mappings":"gNAiBeA,EAfA,SAACC,GACd,OACE,qBACEC,UAAS,iBAAYD,EAAME,OAAS,SAAW,IAC/CC,QAASH,EAAMG,QACfC,MAAO,CACLC,gBAAiBL,EAAMM,MACvBC,cAAeP,EAAMQ,SAAW,OAAS,QAL7C,SAQE,4BAAIR,EAAMS,QCZHC,EAAU,CACrB,CAAED,GAAI,EAAGH,MAAO,QAChB,CAAEG,GAAI,EAAGH,MAAO,SAChB,CAAEG,GAAI,EAAGH,MAAO,oBAChB,CAAEG,GAAI,EAAGH,MAAO,UCQHK,MAVf,YAA4C,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,aACzB,OACE,gCACE,2CACA,iDAAoBD,KACpB,wBAAQT,QAASU,EAAjB,mBCPS,MAA0B,gCCA1B,MAA0B,iCCUrCC,EAAe,IAAIC,MAAMC,GACzBC,EAAiB,IAAIF,MAAMG,GACzBC,EAAgB,SAACC,EAAKC,GAC1B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,GAEjDK,E,4MACJC,MAAQ,CACNC,MAAO,EACPC,QAAS,EACTC,UAAU,EACVC,KAAM,KACNC,OAAQ,EACRC,WAAW,G,EAGbC,WAAQC,E,EAERC,aAAe,SAAC1B,GACd,EAAK2B,SAAS,CACZT,MAAO,EAAKD,MAAMC,MAAQ,KAE5BU,QAAQC,IAAI,CAAE7B,OACVA,IAAO,EAAKiB,MAAME,QACpB,EAAKW,cAEL,EAAKH,SAAS,CACZL,OAAQ,K,EAKdS,WAAa,WACX,GAAI,EAAKd,MAAMK,QAAU,EACvB,EAAKQ,kBADP,CAIA,IAAIE,EAEJ,GACEA,EAAatB,EAAc,EAAG,SACvBsB,IAAe,EAAKf,MAAME,SAEnC,EAAKQ,SAAS,CACZR,QAASa,EACTX,KAAwB,IAAlB,EAAKJ,MAAMI,KACjBC,OAAQ,EAAKL,MAAMK,OAAS,IAG9B,EAAKE,MAAQS,WAAW,EAAKF,WAAY,EAAKd,MAAMI,MACpDO,QAAQC,IAAI,mBAAoB,EAAKZ,MAAME,W,EAG7Ce,aAAe,WACb,EAAKH,aACL,EAAKJ,SAAS,CACZJ,WAAW,IAEbf,EAAe2B,OACf9B,EAAa+B,S,EAGfN,YAAc,WACZO,aAAa,EAAKb,OAClBnB,EAAa8B,OACb3B,EAAe4B,QACf,EAAKT,SAAS,CACZP,UAAU,EACVD,QAAS,K,EAGbf,aAAe,WACb,EAAKuB,SAAS,CACZP,UAAU,EACVF,MAAO,EACPI,OAAQ,EACRC,WAAW,K,4CAGf,WAAU,IAAD,OACP,OACE,sBAAK/B,UAAS,UAAK8C,KAAKrB,MAAMG,SAAW,UAAY,IAArD,UACE,4CACA,8CAAiBkB,KAAKrB,MAAMC,SAC5B,qBAAK1B,UAAU,UAAf,SACGS,EAAQsC,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAEExC,GAAIwC,EAAOxC,GACXH,MAAO2C,EAAO3C,MACdH,QAAS,kBAAM,EAAKgC,aAAac,EAAOxC,KACxCD,SAAU,EAAKkB,MAAMM,UACrB9B,OAAQ,EAAKwB,MAAME,UAAYqB,EAAOxC,IALjCwC,EAAOxC,SASlB,gCACE,wBAAQD,SAAUuC,KAAKrB,MAAMM,UAAW7B,QAAS4C,KAAKJ,aAAtD,mBAGA,wBAAQxC,QAAS4C,KAAKR,YAAtB,qBAEDQ,KAAKrB,MAAMG,UACV,cAAC,EAAD,CAAUjB,MAAOmC,KAAKrB,MAAMC,MAAOd,aAAckC,KAAKlC,sB,GAjG9CqC,aAuGHzB,ICjHf0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.433282d9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Circle = (props) => {\n  return (\n    <div\n      className={`circle ${props.active ? \"active\" : \"\"}`}\n      onClick={props.onClick}\n      style={{\n        backgroundColor: props.color,\n        pointerEvents: props.disabled ? \"auto\" : \"none\",\n      }}\n    >\n      <p>{props.id}</p>\n    </div>\n  );\n};\n\nexport default Circle;\n","export const circles = [\n  { id: 1, color: \"blue\" },\n  { id: 2, color: \"green\" },\n  { id: 3, color: \"rgb(153, 43, 43)\" },\n  { id: 4, color: \"black\" },\n];\n","import React from \"react\";\n\nfunction GameOver({ point, closeHandler }) {\n  return (\n    <div>\n      <h4>Game over</h4>\n      <p>your score was: {point}</p>\n      <button onClick={closeHandler}>X</button>\n    </div>\n  );\n}\n\nexport default GameOver;\n","export default __webpack_public_path__ + \"static/media/end.4fcec062.mp3\";","export default __webpack_public_path__ + \"static/media/game.fdbf2b6c.mp3\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Circle from \"./Circle\";\nimport { circles } from \"./circles\";\nimport GameOver from \"./GameOver\";\nimport \"./index.css\";\n\nimport endSound from \"./assets/sounds/end.mp3\";\nimport startSound from \"./assets/sounds/game.mp3\";\n\nlet gameendSound = new Audio(endSound);\nlet gamestartSound = new Audio(startSound);\nconst getRndInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nclass App extends Component {\n  state = {\n    score: 0,\n    current: 0,\n    gameover: false,\n    pace: 1500,\n    rounds: 0,\n    gamestart: false,\n  };\n\n  timer = undefined;\n\n  clickHandler = (id) => {\n    this.setState({\n      score: this.state.score + 10,\n    });\n    console.log({ id });\n    if (id !== this.state.current) {\n      this.stopHandler();\n    } else {\n      this.setState({\n        rounds: 0,\n      });\n    }\n  };\n\n  nextCircle = () => {\n    if (this.state.rounds >= 5) {\n      this.stopHandler();\n      return;\n    }\n    let nextActive;\n\n    do {\n      nextActive = getRndInteger(1, 4);\n    } while (nextActive === this.state.current);\n\n    this.setState({\n      current: nextActive,\n      pace: this.state.pace * 0.95,\n      rounds: this.state.rounds + 1,\n    });\n\n    this.timer = setTimeout(this.nextCircle, this.state.pace);\n    console.log(\"active circle is\", this.state.current);\n  };\n\n  startHandler = () => {\n    this.nextCircle();\n    this.setState({\n      gamestart: true,\n    });\n    gamestartSound.play();\n    gameendSound.pause();\n  };\n\n  stopHandler = () => {\n    clearTimeout(this.timer);\n    gameendSound.play();\n    gamestartSound.pause();\n    this.setState({\n      gameover: true,\n      current: 0,\n    });\n  };\n  closeHandler = () => {\n    this.setState({\n      gameover: false,\n      score: 0,\n      rounds: 0,\n      gamestart: false,\n    });\n  };\n  render() {\n    return (\n      <div className={`${this.state.gameover ? \"overlay\" : \"\"}`}>\n        <h1>Speed Game</h1>\n        <h4>Your Score: {this.state.score}</h4>\n        <div className=\"circles\">\n          {circles.map((circle) => (\n            <Circle\n              key={circle.id}\n              id={circle.id}\n              color={circle.color}\n              onClick={() => this.clickHandler(circle.id)}\n              disabled={this.state.gamestart}\n              active={this.state.current === circle.id}\n            />\n          ))}\n        </div>\n        <div>\n          <button disabled={this.state.gamestart} onClick={this.startHandler}>\n            Start\n          </button>\n          <button onClick={this.stopHandler}>Stop</button>\n        </div>\n        {this.state.gameover && (\n          <GameOver point={this.state.score} closeHandler={this.closeHandler} />\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}